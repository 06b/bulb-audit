<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bulb Inclusive Design Audit on Bulb Audit</title>
    <link>https://heydon.github.io/bulb-audit/</link>
    <description>Recent content in Bulb Inclusive Design Audit on Bulb Audit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jan 2018 17:11:56 +0000</lastBuildDate>
    
	<atom:link href="https://heydon.github.io/bulb-audit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cupper</title>
      <link>https://heydon.github.io/bulb-audit/print-version/</link>
      <pubDate>Tue, 02 Jan 2018 17:11:56 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/print-version/</guid>
      <description>You don&amp;rsquo;t want to edit this file :-)</description>
    </item>
    
    <item>
      <title>Scope</title>
      <link>https://heydon.github.io/bulb-audit/patterns/scope/</link>
      <pubDate>Tue, 02 Jan 2018 17:11:55 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/scope/</guid>
      <description>Introduction This document sets out the scope for the testing and evaluation of the Bulb websites. For efficient reporting, not every page and component is included in the scope. However, samples are chosen such that each important design pattern is covered.
In the report, issues are divided into General and Components categories. General issues may include problems with — for example — document structure, or absence of focus styles. Components issues organize advice by isolated component, such as a tab interface or dialog window.</description>
    </item>
    
    <item>
      <title>Answer choices</title>
      <link>https://heydon.github.io/bulb-audit/patterns/components/answer-choices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/components/answer-choices/</guid>
      <description>Introduction The Join site&amp;rsquo;s question screens include custom radio button-like components for selecting an answer. For example, the &amp;ldquo;My home uses&amp;rdquo; page offers a choice between &amp;ldquo;Gas &amp;amp; Electricity&amp;rdquo; and &amp;ldquo;Electricity only&amp;rdquo; (pictured).
Despite having the appearance of radio buttons (the familiar encircled dot design is used), these are custom components, built in Angular from &amp;lt;div&amp;gt; and &amp;lt;span&amp;gt; elements. A number of issues emerge:
 The controls do not offer any semantic information (role, state etc.</description>
    </item>
    
    <item>
      <title>Bedrooms stepper</title>
      <link>https://heydon.github.io/bulb-audit/patterns/components/bedroom-stepper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/components/bedroom-stepper/</guid>
      <description>Introduction The Join Site provides a &amp;ldquo;stepper&amp;rdquo; component for incrementing and decrementing the number of bedrooms the user&amp;rsquo;s house or flat contains (pictured).
There are a number of issues relating to this implementation:
 The plus and minus buttons do not have focus styles The plus and minus buttons do not have labels The purpose of the controls is not reported to screen readers The updating of the number of bedrooms is not reported to screen readers  It is also unintuitive that the values &amp;lsquo;cycle&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Color dependence</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/color-dependence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/color-dependence/</guid>
      <description>Introduction Color makes interfaces attractive and can sometimes help to reinforce meaning. For example, red is associated with danger in many Western cultures, and may form part of a &amp;lsquo;delete&amp;rsquo; button&amp;rsquo;s design.
But dependence on color alone to communicate important information runs the risk of alienating a range of users, including those with forms of color blindness, and others with monochrome displays.
In each case color is used to differentiate items, a supplementary alternative method of differentiation should also be present.</description>
    </item>
    
    <item>
      <title>Focus styles</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/focus-styles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/focus-styles/</guid>
      <description>Introduction Focus styling, provided by user agents by default, is used to indicate which element is currently being focused by keyboard. Typically, focus is achieved by pressing the Tab key. Pressing Tab should focus the next interactive element in the source, invoking the focus style.
Users who rely on the keyboard for page navigation include those with motor impairments due to long term ailments (such as rheumatism) or temporary injuries (like a broken wrist).</description>
    </item>
    
    <item>
      <title>Form errors</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/form-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/form-errors/</guid>
      <description>Introduction As users attempt to complete forms, it is important they are notified promptly and clearly when they make errors, and are provided with assistance in fixing those errors.
For assistive technology users, completing forms can be especially arduous where one or more of the following are true.
 The invalid state of a field is not communicated The error message is not associated with the field The presence of errors is not communicated on submission  The careful wording of error messages and descriptions is also important, as well as indicating which text is error text without relying entirely on color (see  Color dependence).</description>
    </item>
    
    <item>
      <title>Heading structure</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/heading-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/heading-structure/</guid>
      <description>Introduction Heading elements are often chosen according to the perceived importance of the text they contain and the sections they introduce. The more &amp;lsquo;important&amp;rsquo; the heading, the higher the heading level and — typically — the larger the font size. An &amp;lt;h3&amp;gt; might be 1.5rem and an &amp;lt;h1&amp;gt; 3rem.
However, headings levels do not simply denote importance, but a hierarchy of page subsections. There are certain rules to creating a hierarchy (or &amp;lsquo;document outline&amp;rsquo;) that should not be broken:</description>
    </item>
    
    <item>
      <title>Inconsistency</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/inconsistency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/inconsistency/</guid>
      <description>Introduction An important inclusive design principle, is &amp;ldquo;Be consistent&amp;rdquo;. Interfaces that fail to do so present unnecessary burdens of comprehension to users — especially those who consume HTML semantics, such as screen reader users. In particular, inconsistent navigation schema and page structure can make the user feel disoriented and unsure.
It is appreciated that a consistent experience can be difficult to achieve when managing three separate projects, built on separate technologies, and it is noted that a design system is currently being developed to help diminish the issue.</description>
    </item>
    
    <item>
      <title>List structure</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/list-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/list-structure/</guid>
      <description>Introduction Along with headings, lists give structure to a web page. They group items together so users know they are related or equivalent.
Assistive technology users find lists especially helpful because most software will identify a list semantically, enumerate its items, and provide shortcuts for navigating between the list items. The NVDA screen reader provides the L shortcut key for navigating between lists, and the I shortcut key for jumping between list items.</description>
    </item>
    
    <item>
      <title>Menu buttons</title>
      <link>https://heydon.github.io/bulb-audit/patterns/components/menu-button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/components/menu-button/</guid>
      <description>Introduction A mainstay in responsive design, the &amp;ldquo;hamburger&amp;rdquo; menu button secretes a menu of navigation options that can be revealed on click, press, or — more likely — tap. There is some concern over the usability of hamburger menus meaning they should only be employed where absolutely necessary. If only a few navigation items are provided, simply rearranging them for small screens is probably preferable.
Where menu buttons are included, they need to conform to accessibility standards like any other control.</description>
    </item>
    
    <item>
      <title>Missing and placeholder labels</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/placeholder-labels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/placeholder-labels/</guid>
      <description>Introduction All form elements need labels associated to them. Where a label is not associated, the screen reader user is not informed of the field&amp;rsquo;s purpose upon focusing that field. Screen reader users typically traverse forms by focus, not &amp;lsquo;virtual cursor&amp;rsquo; (element by element).
The placeholder attribute is intended for providing supplemental hints and examples for completing a form. It should be used in conjunction with a standard and persistent label, conventionally placed above the input in question.</description>
    </item>
    
    <item>
      <title>Routing</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/routing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/routing/</guid>
      <description>Introduction Single-page applications present some unique challenges for accessibility, particularly in regard to routing and the navigation of views.
Views (or &amp;lsquo;screens&amp;rsquo;) in single-page applications attempt to emulate pages in more traditional multi-page sites. Visually, the experience is similar (some content is replace with some other content). However, when replacing content by manipulating the DOM in situ, the experience for screen reader and keyboard users is lacking. Unlike when a page is loaded, a switch in views does not announce the page&amp;rsquo;s &amp;lt;title&amp;gt;.</description>
    </item>
    
    <item>
      <title>Show password</title>
      <link>https://heydon.github.io/bulb-audit/patterns/components/show-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/components/show-password/</guid>
      <description>Introduction The option to &amp;ldquo;show password&amp;rdquo; when one is writing it is a sound inclusive design feature, helping users to compose or check their writing of passwords. However, a &amp;ldquo;show password&amp;rdquo; button that is not technically accessible fails some of the users who may want to take advantage of it.
The pictured show password control ahs a number of problems that need addressing:
 It functions as a button, but is marked up as a link It is not focusable by keyboard (because, as a link, it is missing an href) Were it focusable, upon clicking it, focus would be lost — because it is actually two controls, with one always hidden It appears before the field to which it relates, which is somewhat confusing visually and represents a backwards reading order non-visually.</description>
    </item>
    
    <item>
      <title>Skip links</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/skip-links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/skip-links/</guid>
      <description>Introduction WCAG 2.0 mandates a &amp;lsquo;bypass&amp;rsquo; mechanism to enable users that navigate web pages by keyboard to skip over introductory content and go directly to the main (unique) content of the page. Without such a provision, accessing page content can be time consuming and arduous.
With the introduction of landmark elements like &amp;lt;main&amp;gt;, it has become easier for screen reader users to navigate between the larger sections of the page using software-specific shortcuts.</description>
    </item>
    
    <item>
      <title>Text alternatives</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/textual-alternatives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/textual-alternatives/</guid>
      <description>Introduction For blind users, textual alternatives of important visual information must be provided. Composing that text effectively is a question of context.
For example, a logo that is intended as a study in logo design should include a textual alternative — typically via an &amp;lt;img&amp;gt; tag&amp;rsquo;s alt attribute — that describes the features of the logo, such as the colors and typography. For Bulb&amp;rsquo;s logo this might read something like, &amp;rdquo; expressive, hand written text, in white, and featuring hooped ascenders&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Usage chart</title>
      <link>https://heydon.github.io/bulb-audit/patterns/components/usage-chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/components/usage-chart/</guid>
      <description>Introduction The Bulb sites use a number of charts and graphs, primarily to illustrate fairly simple concepts. However, the energy usage chart found in the Account dashboard&amp;rsquo;s My usage screen communicates critical, detailed information. It — or an alternative for it — therefore needs to communicate the information it represents in a detailed and structured way.
Commonly, complex charts are accompanied by invisible data tables, intended for blind screen reader users.</description>
    </item>
    
    <item>
      <title>Wording</title>
      <link>https://heydon.github.io/bulb-audit/patterns/general/wording/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://heydon.github.io/bulb-audit/patterns/general/wording/</guid>
      <description>Introduction It&amp;rsquo;s not enough that elements in a web page&amp;rsquo;s HTML are marked up correctly. Where they provide textual labels, these labels need to be readable and descriptive.
 Headings must clearly describe the sections they introduce Labels for links, buttons and form elements must clearly describe the purpose of those controls Page titles must sufficiently describe the page and its purpose  Since headings and links are aggregated into lists by screen reader software, it is important they make sense independent of context.</description>
    </item>
    
  </channel>
</rss>